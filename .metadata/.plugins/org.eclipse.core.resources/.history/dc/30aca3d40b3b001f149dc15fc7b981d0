package java01_variables;

public class Variables_02 {
	public static void main(String[] args) {
		//각 유형의 대표 자료형
		//int, double, boolean, char
		//----------------------------------------------------
		
		// int 변수이름; // 자바는 유니코드 사용하므로 변수이름을 한글로 써도 되지만, 인코딩이 바뀌면 한글이 깨지는 문제 때문에
		// 사용하지 않고, 변수 이름은 되도록 아스키 코드로 써야 한다.
		// 원래는 주석도 영어로 써야 하나, 최근에는 UTF-8이 일반화되어서 주석을 영어로 쓰지 않아도 상관없는 경우 많다.
		// 다만, 인코딩으로 인해 골치아픈 문제를 현업에서 마주칠 수는 있다.
		
//		data = 13; 변수를 만들기 전에 사용하면, "[변수이름]을 변수로 확인할 수 없습니다." 오류가 발생한다. 
//		"[변수이름] cannot be resolved to a variable."
		
		byte bData = 123; //  컴퓨터는 오른쪽 숫자(int로 처리)를 먼저 메모리에 기록하고 왼쪽 변수에 기록하면서 변수형이 바뀐다.
		
		short sData = 456;
		
		long lData = 3000000000L; // 처음 메모리에 기록할 때 부터 int로 처리하지 않고 long으로 처리하기위해서 처음부터 L을 쓴다.
		// 따라서, 왼쪽은 21억 넘는숫자 저장할수 있지만, 처음 숫자 대입할때 21억 넘는숫자를 바로 대입할 수 없다.
		
		float fData = 3.14F; // 실수는 기본이 double로 처리하기 때문에, float로 대입하려면 반드시 F를 써줘야 한다.
		
		// 변수 선언(Declaration)
		int data;
		// -> int형 데이터를 저장할 수 있는 메모리공간(변수)이 생성된다.
		
		// 변수에 값(데이터) 대입(Assignment)
		data = 17;
		// = 오른쪽에 있는 값을 왼쪽에 있는 변수에 대입한다.
		// -> data변수에 17이라는 값을 저장한다.
		// 주석을 꼼꼼히 계속 적다보면 나중에는 주석 없이도 어려운 코드를 쉽게 해석할 수 있다.
		
		data = 99;//값 대입
		// -> data변수에 99라는 값을 저장한다
		// -> data변수에 저장되어 있던 이전 값 17을 지우고 99로 대체한다.
		
		System.out.println( data );
		// 변수를 찾아 변수에 저장되어 있는 값을 가져와서 출력한다.
		// -> data 변수에 저장되어 있는 99를 불러와서 콘솔에 출력한다.
//		System.out.println( 99 );
		// 프로그램을 추적하는 개발 노트를 써보면 좋다. 이 습관이 지금부터 훈련되어야 길어진 코드를 분석할 수 있다.
		// 더 나중에 가면, 클래스를 여러개 쪼개서 코드가 짧아지겠지만, 이 때부터는 굉장히 복잡하게 생각하고 분석해야 한다.
		// 따라서, 프로그램을 추적하는 습관을 기르는 것이 도움이 많이 된다.
		// 개발하다보면 자료구조와 알고리즘이라는 로직 능력이 필요한데, 이 로직 공부 때도 개발노트 및 주석을 달아보는 것을 강력히 추천한다.

	}
}
