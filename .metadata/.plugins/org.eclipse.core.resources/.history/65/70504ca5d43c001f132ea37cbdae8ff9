package java06_class;

//실행 클래스(Main 메소드가 있는 클래스)
// 메인 메소드를 정의하고 있는 클래스
// 프로그램을 실행할 수 있는 클래스
public class Main_01 {
	public static void main(String[] args) {
		
		int n; // 메인 메소드의 지역 변수
		
		System.out.println("main() 실행 테스트");
		System.out.println("---------------------------");
		
		// Class_01 타입의 참조형 변수인 c01 선언
		Class_01 c01;// 실제 정식 명칭은 java06_class.Class_01 이지만
		// 같은 패키지여서 패키지명 생략
		
		
		// Class_01 타입의 인스턴스를 생성한다(new 연산자 이용)
		c01 = new Class_01(); // 인스턴스화
		// 인스턴스의 참조값을 c01 객체 변수에 대입한다.
		
		//---------------------------------------------------------
		
		// 멤버 필드의 이용

		c01.num = 123; // int형
		c01.data = "Apple"; //char형
	
		// 멤버 메소드의 이용
		
		//메소드 호출(call, 사용)
		c01.display();
		
		Class_01 c02 = new Class_01(); // 모양이 똑같은 형태가 복제됨
		Class_01 c03 = new Class_01();
		Class_01 c04 = new Class_01();
		
		//---------------------------------------------------------

		c02.num = 200;
		c03.num = 300;
		c04.num = 400;
		
		//---------------------------------------------------------

		System.out.println("---------------------------");
		
		//객체 변수를 출력하면 참조값이 출력도니다
		// -> 레퍼런스(Reference)
		System.out.println(c04); // 참조형 변수이므로 참조값이 출력된다(데이터타입@메모리주소)
	
		System.out.println("---------------------------");

		Class_01 c05 = null; // 참조 대상 X
		//에러, NullPointerException 발생
//		c05.data = "Banana"; // NullPointerException 예외가 발생하여 실행이 중지된다.
		// 이 오류는 앞으로 자주 보게 될 오류이며, 해결책을 정확히 알아야만 한다.
		
		// ** NullPointerException
		// -> null 값을 참조하여 코드를 실행하려고 했을 때 발생한다.
		// 참조.안쪽 -> .은 단항 연산자
		// 이 오류가 발생하면 오류가 발생한 곳을 찾아서 그곳의 .을 찾는다.
		// 그러면 거의 대부분의 경우에서 .왼쪽이 null값으로 문제를 일으키는 원인이다.
		
	} // main end
	
}
